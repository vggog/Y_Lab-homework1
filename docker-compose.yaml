version: "3"

services:
  db:
    image: postgres:15.1
    volumes:
      - ylab_db:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - ylab-network
    container_name: ylab-db
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 5s
      retries: 5

  back:
    build: .
    command: bash start_app.sh
    volumes:
      - ./:/app/
    ports:
      - "8000:8000"
    networks:
      - ylab-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      brocker:
        condition: service_healthy
    container_name: ylab-back
    restart: always

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_storage:/data
    networks:
      - ylab-network
    container_name: ylab-redis
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  brocker:
    image: rabbitmq:alpine
    env_file:
      - .env
    ports:
      - "5672:5672"
    restart: always
    networks:
      - ylab-network
    volumes:
      - brocker_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 30s
      retries: 5

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    container_name: celery
    restart: always
    networks:
      - ylab-network
    command: [ "celery", "--app=src.tasks.tasks:celery", "worker", "-l", "INFO" ]
    depends_on:
      - back

networks:
  ylab-network:

volumes:
  ylab_db:
  redis_storage:
  brocker_data:
